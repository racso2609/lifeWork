{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/racso/Documents/lifeWork/reactNative/FirstApp/frontendANDROID/src/Components/Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { View, Button, Fab } from 'native-base';\nimport { ListItem, Text } from 'react-native-elements';\n\nvar SimpleTaskComponent = function SimpleTaskComponent(_ref) {\n  var SimpleTask = _ref.SimpleTask,\n      DeleteSimpleTask = _ref.DeleteSimpleTask;\n\n  var DeleteTask = function DeleteTask(TaskId) {\n    DeleteSimpleTask(TaskId);\n  };\n\n  var Taskmenu = SimpleTask.map(function (Task) {\n    return React.createElement(ListItem, {\n      key: Task._id,\n      style: {\n        marginRight: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, React.createElement(Icon, {\n      name: \"sticky-note\",\n      size: 25,\n      color: \"purple\",\n      style: {\n        marginHorizontal: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }), React.createElement(Icon, {\n      name: \"trash\",\n      size: 16,\n      color: \"red\",\n      style: {\n        marginHorizontal: 10,\n        position: 'absolute',\n        right: 0,\n        top: 8\n      },\n      onPress: function onPress() {\n        DeleteTask(Task._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }), React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, Task.Name), React.createElement(ListItem.Subtitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, Task.FinishOn)));\n  });\n  return React.createElement(ScrollView, {\n    horizontal: true,\n    centerContent: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, Taskmenu);\n};\n\nvar NotTaskMessage = function NotTaskMessage(_ref2) {\n  var TaskType = _ref2.TaskType;\n  return React.createElement(Text, {\n    style: {\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Add Your First \", TaskType);\n};\n\nvar Home = function Home(props) {\n  var onRefresh = function onRefresh() {\n    return props.GetTask();\n  };\n\n  var _useState = useState({\n    active: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Fab, {\n    active: state.active,\n    direction: \"up\",\n    style: {\n      backgroundColor: '#5067FF'\n    },\n    position: \"bottomRight\",\n    onPress: function onPress() {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        active: !state.active\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"plus\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    style: {\n      backgroundColor: '#34A34F'\n    },\n    onPress: function onPress() {\n      return props.navigation.navigate('AddSimpleTask');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"sticky-note\",\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })), React.createElement(Button, {\n    style: {\n      backgroundColor: '#3B5998'\n    },\n    onPress: function onPress() {\n      return onRefresh();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"refresh\",\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    style: styles.textSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.textSectionTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    h4: true,\n    style: styles.titleSection,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Simple Task\"), React.createElement(Icon, {\n    name: \"eye\",\n    size: 15,\n    color: \"purple\",\n    style: {\n      marginRight: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), props.SimpleTask ? React.createElement(SimpleTaskComponent, {\n    SimpleTask: props.SimpleTask,\n    DeleteSimpleTask: props.DeleteSimpleTask,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }) : React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, React.createElement(NotTaskMessage, {\n    TaskType: \"Simple Task\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  textSection: {\n    marginTop: 10\n  },\n  textSectionTitle: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  titleSection: {\n    fontWeight: 'bold',\n    marginBottom: 10,\n    marginLeft: 20\n  }\n});\nexport default Home;","map":{"version":3,"sources":["/home/racso/Documents/lifeWork/reactNative/FirstApp/frontendANDROID/src/Components/Home.js"],"names":["React","useState","ScrollView","Icon","View","Button","Fab","ListItem","Text","SimpleTaskComponent","SimpleTask","DeleteSimpleTask","DeleteTask","TaskId","Taskmenu","map","Task","_id","marginRight","marginHorizontal","position","right","top","Name","FinishOn","NotTaskMessage","TaskType","justifyContent","Home","props","onRefresh","GetTask","active","state","setState","flex","backgroundColor","navigation","navigate","styles","textSection","textSectionTitle","titleSection","alignItems","StyleSheet","create","marginTop","flexDirection","fontWeight","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { StyleSheet } from 'react-native'\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport { View, Button, Fab } from 'native-base';\nimport { ListItem, Text } from 'react-native-elements';\n\nconst SimpleTaskComponent = ({ SimpleTask, DeleteSimpleTask }) => {\n   \n   const DeleteTask = (TaskId)=>{\n        DeleteSimpleTask(TaskId);\n   }\n   \n    const Taskmenu = SimpleTask.map((Task) => {\n        return (\n\n            <ListItem key={Task._id} style={{ marginRight: 20 }}>\n                <Icon name='sticky-note' size={25} color='purple' style={{ marginHorizontal: 10 }} />\n                <Icon name='trash' size={16} color='red' style={{ marginHorizontal: 10, position: 'absolute', right: 0, top: 8 }} onPress={()=>{DeleteTask(Task._id)}}/>\n                <ListItem.Content>\n                    <ListItem.Title>{Task.Name}</ListItem.Title>\n                    <ListItem.Subtitle>{Task.FinishOn}</ListItem.Subtitle>\n                </ListItem.Content>\n            </ListItem>\n        );\n    });\n    return (\n        <ScrollView horizontal centerContent >\n            {Taskmenu}\n        </ScrollView>\n    );\n\n}\n\nconst NotTaskMessage = ({ TaskType }) => {\n    return (\n        <Text style={{ justifyContent: 'center' }}>Add Your First {TaskType}</Text>\n    )\n}\n\n\n\nconst Home = (props) => {\n\n    const onRefresh = () => props.GetTask()\n\n\n    const [state, setState] = useState({\n        active: false\n    });\n\n\n    return (\n        <View style={{ flex: 1 }} >\n            {/* Fab */}\n            <Fab\n                active={state.active}\n                direction='up'\n                style={{ backgroundColor: '#5067FF' }}\n                position='bottomRight'\n                onPress={() => setState({ ...state, active: !state.active })}\n            >\n                <Icon name='plus' />\n\n                <Button style={{ backgroundColor: '#34A34F' }} onPress={() => props.navigation.navigate('AddSimpleTask')}>\n                    <Icon name='sticky-note' color='white' />\n                </Button>\n                <Button style={{ backgroundColor: '#3B5998' }} onPress={() => onRefresh()}>\n                    <Icon name='refresh' color='white' />\n                </Button>\n            </Fab>\n\n            {/* Simple Task */}\n            <View style={styles.textSection}>\n                <View style={styles.textSectionTitle}>\n                    <Text h4 style={styles.titleSection}>Simple Task</Text>\n                    <Icon name='eye' size={15} color='purple' style={{ marginRight: 30 }} />\n                </View>\n                {\n                    props.SimpleTask ?\n                        <SimpleTaskComponent SimpleTask={props.SimpleTask} DeleteSimpleTask={props.DeleteSimpleTask} /> :\n                        <View style={{ alignItems: 'center' }}>\n                            <NotTaskMessage TaskType='Simple Task' />\n                        </View>\n                }\n            </View>\n        \n            {/* Advanced Task */}\n        \n        \n        \n        \n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    textSection:{\n        marginTop: 10\n    },\n    textSectionTitle: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n    },\n    titleSection: {\n        fontWeight: 'bold',\n        marginBottom: 10,\n        marginLeft: 20\n    }\n})\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}