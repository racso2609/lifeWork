{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/racso/Documents/lifeWork/reactNative/FirstApp/frontendANDROID/src/Components/DataPicker.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from 'react-native-elements';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nvar DatePicker = function DatePicker(_ref) {\n  var setState = _ref.setState,\n      state = _ref.state,\n      mode = _ref.mode;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || state.FinishOn;\n    setShow(Platform.OS === 'ios');\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      FinishOn: currentDate\n    }));\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    titleStyle: {\n      color: 'gray'\n    },\n    onPress: function onPress() {\n      return setShow(true);\n    },\n    title: 'Date: ' + (\"\" + state.FinishOn.toString().substr(4, 12)),\n    type: \"clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \" \")), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: state.FinishOn,\n    mode: mode,\n    is24Hour: false,\n    display: 'default',\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default DatePicker;","map":{"version":3,"sources":["/home/racso/Documents/lifeWork/reactNative/FirstApp/frontendANDROID/src/Components/DataPicker.js"],"names":["React","useState","Button","DateTimePicker","DatePicker","setState","state","mode","show","setShow","onChange","event","selectedDate","currentDate","FinishOn","Platform","OS","flexDirection","alignItems","color","toString","substr"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,MAAT,QAAuB,uBAAvB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA+B;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACtBN,QAAQ,CAAC,KAAD,CADc;AAAA;AAAA,MACvCO,IADuC;AAAA,MACjCC,OADiC;;AAG9C,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,YAAR,EAAyB;AACtC,QAAMC,WAAW,GAAGD,YAAY,IAAIN,KAAK,CAACQ,QAA1C;AACAL,IAAAA,OAAO,CAACM,QAAQ,CAACC,EAAT,KAAgB,KAAjB,CAAP;AACAX,IAAAA,QAAQ,iCAAMC,KAAN;AAAaQ,MAAAA,QAAQ,EAAED;AAAvB,OAAR;AACH,GAJD;;AAOA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,UAAU,EAAE;AAApC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAApB;AAAqC,IAAA,OAAO,EAAE;AAAA,aAAMV,OAAO,CAAC,IAAD,CAAb;AAAA,KAA9C;AAAmE,IAAA,KAAK,EAAE,iBAAcH,KAAK,CAACQ,QAAN,CAAeM,QAAf,GAA0BC,MAA1B,CAAiC,CAAjC,EAAoC,EAApC,CAAd,CAA1E;AAAmI,IAAA,IAAI,EAAC,OAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CADJ,EAMKb,IAAI,IACD,oBAAC,cAAD;AACI,IAAA,MAAM,EAAC,gBADX;AAEI,IAAA,KAAK,EAAEF,KAAK,CAACQ,QAFjB;AAGI,IAAA,IAAI,EAAEP,IAHV;AAII,IAAA,QAAQ,EAAE,KAJd;AAKI,IAAA,OAAO,EAAE,SALb;AAMI,IAAA,QAAQ,EAAEG,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPR,CADJ;AAmBH,CA7BD;;AA+BA,eAAeN,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Platform, View, Text } from 'react-native';\nimport { Button } from 'react-native-elements';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\n\nconst DatePicker = ({ setState, state, mode }) => {\n    const [show, setShow] = useState(false);\n\n    const onChange = (event, selectedDate) => {\n        const currentDate = selectedDate || state.FinishOn;\n        setShow(Platform.OS === 'ios');\n        setState({ ...state, FinishOn: currentDate });\n    };\n\n\n    return (\n        <View>\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                <Button titleStyle={{color: 'gray'}} onPress={() => setShow(true)} title={'Date: ' + `${state.FinishOn.toString().substr(4, 12)}`} type='clear' />\n                <Text> </Text>\n            </View>\n\n            {show && (\n                <DateTimePicker\n                    testID='dateTimePicker'\n                    value={state.FinishOn}\n                    mode={mode}\n                    is24Hour={false}\n                    display={'default'}\n                    onChange={onChange}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default DatePicker;"]},"metadata":{},"sourceType":"module"}