{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/racso/Documents/lifeWork/reactNative/FirstApp/frontendANDROID/src/Components/AddSimpleTask.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Textarea, Input, Item, Button } from 'native-base';\nimport DatePicker from \"./DataPicker\";\n\nvar AddSimpleTask = function AddSimpleTask(props) {\n  var _useState = useState({\n    Name: null,\n    FinishOn: new Date(),\n    Description: null,\n    ErrMess: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var onChangeInput = function onChangeInput(input, value) {\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, input, value)));\n  };\n\n  var onPressButton = function onPressButton() {\n    if (state.Name && state.FinishOn && state.Description) {\n      var data = {\n        Name: state.Name,\n        FinishOn: state.FinishOn,\n        Description: state.Description\n      };\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        ErrMess: null\n      }));\n      props.navigation.goBack();\n      props.PostSimpleTask(data);\n    } else {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        ErrMess: 'You can`t send with input in blank'\n      }));\n    }\n  };\n\n  return React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Item, {\n    style: styles.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"sticky-note\",\n    color: \"purple\",\n    size: 20,\n    style: {\n      marginHorizontal: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Name\",\n    onChangeText: function onChangeText(value) {\n      return onChangeInput('Name', value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), React.createElement(Item, {\n    style: styles.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Textarea, {\n    rowSpan: 4,\n    bordered: true,\n    placeholder: 'Description',\n    onChangeText: function onChangeText(value) {\n      return onChangeInput('Description', value);\n    },\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), React.createElement(Item, {\n    style: styles.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(DatePicker, {\n    setState: setState,\n    state: state,\n    mode: \"date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.formGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    iconRight: true,\n    block: true,\n    large: true,\n    style: {\n      borderRadius: 10\n    },\n    onPress: function onPress() {\n      return onPressButton();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"plus\",\n    size: 20,\n    color: \"white\",\n    style: {\n      marginHorizontal: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Add New Task\"))), state.ErrMess ? React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, state.ErrMess) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  formGroup: {\n    marginBottom: 30,\n    width: '100%'\n  },\n  form: {\n    width: '95%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default AddSimpleTask;","map":{"version":3,"sources":["/home/racso/Documents/lifeWork/reactNative/FirstApp/frontendANDROID/src/Components/AddSimpleTask.js"],"names":["React","useState","Icon","Textarea","Input","Item","Button","DatePicker","AddSimpleTask","props","Name","FinishOn","Date","Description","ErrMess","state","setState","onChangeInput","input","value","onPressButton","data","navigation","goBack","PostSimpleTask","justifyContent","alignItems","flex","styles","form","formGroup","marginHorizontal","width","borderRadius","color","StyleSheet","create","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Textarea, Input, Item, Button } from 'native-base';\nimport DatePicker from './DataPicker';\n\nconst AddSimpleTask = (props) => {\n  const [state, setState] = useState({\n    Name: null,\n    FinishOn: new Date(),\n    Description: null,\n    ErrMess: null\n  });\n\n  const onChangeInput = (input, value) => {\n    setState({ ...state, [input]: value });\n  }\n  const onPressButton = () => {\n\n    if (state.Name && state.FinishOn && state.Description) {\n      const data = { Name: state.Name, FinishOn: state.FinishOn, Description: state.Description };\n      setState({ ...state, ErrMess: null });\n      props.navigation.goBack();\n      props.PostSimpleTask(data);\n    } else {\n      setState({ ...state, ErrMess: 'You can`t send with input in blank' });\n    }\n  }\n\n  return (\n    <View style={{ justifyContent: 'center', alignItems: 'center', flex: 1 }}>\n      <View style={styles.form}>\n\n        <Item style={styles.formGroup}>\n          <Icon name='sticky-note' color='purple' size={20} style={{ marginHorizontal: 10 }} />\n          <Input placeholder='Name' onChangeText={(value) => onChangeInput('Name', value)} />\n        </Item>\n\n        <Item style={styles.formGroup}>\n          <Textarea rowSpan={4} bordered placeholder={'Description'} onChangeText={(value) => onChangeInput('Description', value)} style={{ width: '100%' }} />\n        </Item>\n\n        <Item style={styles.formGroup}>\n          <DatePicker setState={setState} state={state} mode='date' />\n        </Item>\n\n        <View style={styles.formGroup}>\n\n          <Button iconRight block large style={{ borderRadius: 10 }} onPress={() => onPressButton()}>\n            <Icon name='plus' size={20} color='white' style={{ marginHorizontal: 10 }} />\n            <Text style={{ color: 'white' }}>Add New Task</Text>\n          </Button>\n        </View>\n\n        {\n          state.ErrMess ?\n            <Text style={{ color: 'red' }}>{state.ErrMess}</Text> :\n            <View />\n        }\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  formGroup: {\n    marginBottom: 30,\n    width: '100%'\n\n  },\n  form: {\n    width: '95%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n})\n\nexport default AddSimpleTask;"]},"metadata":{},"sourceType":"module"}