{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/racso/Documents/lifeWork/reactNative/FirstApp/frontendANDROID/src/Components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport axios from 'axios';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport AuthNavigator from \"./navigators/authNavigator\";\nimport TabNavigator from \"./navigators/tabNavigator\";\nimport Setting from \"./Setting\";\nimport AddSimpleTask from \"./AddSimpleTask\";\nvar Stack = createStackNavigator();\n\nvar Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      Token: null,\n      Rol: null,\n      Email: null,\n      Phone: null,\n      Firstname: null,\n      Lastname: null,\n      ErrMess: null,\n      Message: null,\n      isLogin: false,\n      Err: false,\n      proxy: 'http://127.0.0.1:3001/api/',\n      SimpleTask: [],\n      MediumTask: []\n    };\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var LoginPost = function LoginPost(data) {\n        var resp;\n        return _regeneratorRuntime.async(function LoginPost$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(axios.get('http://localhost:3001/api/users/login'));\n\n              case 3:\n                resp = _context.sent;\n                console.log(resp);\n\n                if (_this2.state.isLogin) {\n                  GetTask();\n                }\n\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n                _this2.setState({\n                  ErrMess: _context.t0.message\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 8]], Promise);\n      };\n\n      var SignUpPost = function SignUpPost(data) {\n        var resp;\n        return _regeneratorRuntime.async(function SignUpPost$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(axios.post(_this2.state.proxy + 'users/signup', data).catch(function (err) {\n                  return _this2.setState({\n                    ErrMess: err.message\n                  });\n                }));\n\n              case 2:\n                resp = _context2.sent;\n\n                _this2.setState(resp.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      var Logout = function Logout() {\n        _this2.setState({\n          Token: null,\n          Rol: null,\n          Email: null,\n          Phone: null,\n          Firstname: null,\n          Lastname: null,\n          ErrMess: null,\n          Message: null,\n          isLogin: false,\n          proxy: 'http://127.0.0.1:3001/api/'\n        });\n      };\n\n      var GetTask = function GetTask() {\n        var resp;\n        return _regeneratorRuntime.async(function GetTask$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(axios.get(_this2.state.proxy + 'users/simple-task', {\n                  headers: {\n                    Authorization: 'Bearer ' + _this2.state.Token\n                  }\n                }));\n\n              case 3:\n                resp = _context3.sent;\n\n                _this2.setState(resp.data);\n\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                _this2.setState({\n                  ErrMess: _context3.t0.Message\n                });\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, [[0, 7]], Promise);\n      };\n\n      var PostSimpleTask = function PostSimpleTask(data) {\n        var resp;\n        return _regeneratorRuntime.async(function PostSimpleTask$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return _regeneratorRuntime.awrap(axios.post(_this2.state.proxy + 'users/simple-task', data, {\n                  headers: {\n                    Authorization: 'Bearer ' + _this2.state.Token\n                  }\n                }));\n\n              case 3:\n                resp = _context4.sent;\n\n                _this2.setState(resp.data);\n\n                _context4.next = 11;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(_context4.t0.message);\n\n                _this2.setState({\n                  ErrMess: _context4.t0.message\n                });\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, [[0, 7]], Promise);\n      };\n\n      var DeleteSimpleTask = function DeleteSimpleTask(simpleTaskId) {\n        var resp;\n        return _regeneratorRuntime.async(function DeleteSimpleTask$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return _regeneratorRuntime.awrap(axios.delete(_this2.state.proxy + 'users/simple-task/' + simpleTaskId, {\n                  headers: {\n                    Authorization: 'Bearer ' + _this2.state.Token\n                  }\n                }));\n\n              case 3:\n                resp = _context5.sent;\n\n                _this2.setState(resp.data);\n\n                _context5.next = 10;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n\n                _this2.setState({\n                  ErrMess: _context5.t0.message\n                });\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, null, [[0, 7]], Promise);\n      };\n\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, !this.state.isLogin ? React.createElement(AuthNavigator, {\n        LoginPost: LoginPost,\n        SignUpPost: SignUpPost,\n        ErrMess: this.state.ErrMess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }) : React.createElement(Stack.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Home\",\n        options: function options(_ref) {\n          var navigation = _ref.navigation;\n          return {\n            headerRight: function headerRight() {\n              return React.createElement(Icon, {\n                onPress: function onPress() {\n                  return navigation.navigate('Settings');\n                },\n                name: \"cog\",\n                color: \"gray\",\n                size: 20,\n                style: {\n                  marginHorizontal: 10\n                },\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 41\n                }\n              });\n            }\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }, function (props) {\n        return React.createElement(TabNavigator, _extends({}, props, {\n          GetTask: GetTask,\n          SimpleTask: _this2.state.SimpleTask,\n          Email: _this2.state.Email,\n          DeleteSimpleTask: DeleteSimpleTask,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 43\n          }\n        }));\n      }), React.createElement(Stack.Screen, {\n        name: \"Settings\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }\n      }, function (props) {\n        return React.createElement(Setting, _extends({}, props, {\n          Logout: Logout,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 43\n          }\n        }));\n      }), React.createElement(Stack.Screen, {\n        name: \"AddSimpleTask\",\n        options: {\n          title: 'Add Simple Task'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }\n      }, function (props) {\n        return React.createElement(AddSimpleTask, _extends({}, props, {\n          PostSimpleTask: PostSimpleTask,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 43\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["/home/racso/Documents/lifeWork/reactNative/FirstApp/frontendANDROID/src/Components/Main.js"],"names":["React","Component","createStackNavigator","NavigationContainer","axios","Icon","AuthNavigator","TabNavigator","Setting","AddSimpleTask","Stack","Main","props","state","Token","Rol","Email","Phone","Firstname","Lastname","ErrMess","Message","isLogin","Err","proxy","SimpleTask","MediumTask","LoginPost","data","get","resp","console","log","GetTask","setState","message","SignUpPost","post","catch","err","Logout","headers","Authorization","PostSimpleTask","DeleteSimpleTask","simpleTaskId","delete","navigation","headerRight","navigate","marginHorizontal","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport axios from 'axios';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport AuthNavigator from './navigators/authNavigator';\nimport TabNavigator from './navigators/tabNavigator';\nimport Setting from './Setting';\nimport AddSimpleTask from './AddSimpleTask';\n\n\nconst Stack = createStackNavigator();\n\n\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Token: null,\n            Rol: null,\n            Email: null,\n            Phone: null,\n            Firstname: null,\n            Lastname: null,\n            ErrMess: null,\n            Message: null,\n            isLogin: false,\n            Err: false,\n            proxy: 'http://127.0.0.1:3001/api/',\n            SimpleTask: [],\n            MediumTask: []\n        };\n    }\n    render() {\n        \n        const LoginPost = async (data) => {\n            try {\n                const resp = await axios.get('http://localhost:3001/api/users/login');\n                // this.setState(resp.data);\n                console.log(resp);\n                if (this.state.isLogin) {\n                    GetTask();\n                }\n            } catch (error) {\n                console.log(error);\n                this.setState({ ErrMess: error.message });\n            }\n\n\n        }\n        const SignUpPost = async (data) => {\n            const resp = await axios.post(this.state.proxy + 'users/signup', data).catch((err) => this.setState({ ErrMess: err.message }));\n\n            this.setState(resp.data);\n        }\n        const Logout = () => {\n            this.setState({\n                Token: null,\n                Rol: null,\n                Email: null,\n                Phone: null,\n                Firstname: null,\n                Lastname: null,\n                ErrMess: null,\n                Message: null,\n                isLogin: false,\n                proxy: 'http://127.0.0.1:3001/api/',\n            })\n        }\n        const GetTask = async () => {\n            try {\n                const resp = await axios.get(this.state.proxy + 'users/simple-task', {\n                    headers: {\n                        Authorization: 'Bearer ' + this.state.Token\n                    }\n                });\n\n                this.setState(resp.data);\n\n            } catch (error) {\n                this.setState({ ErrMess: error.Message });\n            }\n        }\n        const PostSimpleTask = async (data) => {\n            try {\n                const resp = await axios.post(this.state.proxy + 'users/simple-task', data, {\n                    headers: {\n                        Authorization: 'Bearer ' + this.state.Token\n                    }\n                });\n                this.setState(resp.data);\n            } catch (error) {\n                console.log(error.message);\n                this.setState({ ErrMess: error.message });\n            }\n        }\n        const DeleteSimpleTask = async (simpleTaskId) => {\n            try {\n                const resp = await axios.delete(this.state.proxy + 'users/simple-task/' + simpleTaskId, {\n                    headers: {\n                        Authorization: 'Bearer ' + this.state.Token\n                    }\n                });\n                this.setState(resp.data);\n            } catch (error) {\n                this.setState({ ErrMess: error.message });\n            }\n        }\n\n\n\n        return (\n\n\n            <NavigationContainer>\n                {!this.state.isLogin ? (\n                    <AuthNavigator LoginPost={LoginPost} SignUpPost={SignUpPost} ErrMess={this.state.ErrMess} />\n                ) : (\n\n                        <Stack.Navigator>\n                            <Stack.Screen name='Home'\n                                options={({ navigation }) => ({\n                                    headerRight: () => (\n                                        <Icon\n                                            onPress={() => navigation.navigate('Settings')}\n                                            name='cog'\n                                            color='gray'\n                                            size={20}\n                                            style={{ marginHorizontal: 10 }}\n                                        />\n                                    ),\n                                })}>\n                                {props => <TabNavigator {...props} GetTask={GetTask} SimpleTask={this.state.SimpleTask} Email={this.state.Email} DeleteSimpleTask={DeleteSimpleTask} />}\n                            </Stack.Screen>\n                            <Stack.Screen name='Settings'  >\n                                {props => <Setting {...props} Logout={Logout} />}\n                            </Stack.Screen>\n                            <Stack.Screen name='AddSimpleTask' options={{ title: 'Add Simple Task' }}  >\n                                {props => <AddSimpleTask {...props} PostSimpleTask={PostSimpleTask} />}\n                            </Stack.Screen>\n                        </Stack.Navigator>\n                    )}\n            </NavigationContainer>\n        );\n    }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}